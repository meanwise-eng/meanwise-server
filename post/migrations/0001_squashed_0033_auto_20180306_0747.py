# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-04-19 17:31
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.migrations.operations.special
import django.db.models.deletion
import jsonfield.fields
import taggit.managers
import uuid


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# post.migrations.0012_add_post_type
# post.migrations.0023_copy_interest_to_topics
# post.migrations.0025_post_topic
# post.migrations.0028_create_thumbnails
# post.migrations.0029_auto_20180225_1346
# post.migrations.0032_auto_add_media_ids_to_old_posts

class Migration(migrations.Migration):

    replaces = [('post', '0001_initial'), ('post', '0002_auto_20170411_1339'), ('post', '0003_auto_20170423_1358'), ('post', '0004_post_resolution'), ('post', '0005_auto_20170622_0922'), ('post', '0006_post_mentioned_users'), ('post', '0007_comment_comment_mentioned_users'), ('post', '0008_auto_20170814_1529'), ('post', '0009_auto_20170924_0659'), ('post', '0010_post_brand'), ('post', '0011_auto_20170921_1657'), ('post', '0012_add_post_type'), ('post', '0013_auto_20170928_1328'), ('post', '0014_post_panaroma_type'), ('post', '0015_auto_20171021_0907'), ('post', '0016_usertopic'), ('post', '0017_auto_20171115_1856'), ('post', '0018_auto_20171127_1006'), ('post', '0019_usertopic_top_posts'), ('post', '0020_usertopic_is_work'), ('post', '0021_post_college'), ('post', '0022_auto_20180123_1158'), ('post', '0023_copy_interest_to_topics'), ('post', '0024_post_thumbnail'), ('post', '0025_post_topic'), ('post', '0026_auto_20180201_1320'), ('post', '0027_post_legacy_deleted'), ('post', '0028_create_thumbnails'), ('post', '0029_auto_20180225_1346'), ('post', '0030_auto_20180225_1439'), ('post', '0031_auto_20180227_1442'), ('post', '0032_auto_add_media_ids_to_old_posts'), ('post', '0033_auto_20180306_0747')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0002_auto_20150616_2121'),
        ('college', '0001_initial'),
        ('userprofile', '0004_auto_20170411_1339'),
        ('userprofile', '0003_auto_20161006_1126'),
        ('brands', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_text', models.CharField(max_length=200)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('commented_by', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='post_images')),
                ('video', models.FileField(blank=True, null=True, upload_to='post_videos')),
                ('text', models.CharField(blank=True, max_length=200, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('interest', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='userprofile.Interest')),
                ('liked_by', models.ManyToManyField(blank=True, related_name='liked_by', to=settings.AUTH_USER_MODEL)),
                ('poster', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='poster', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='Share',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=128)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='post.Post')),
                ('recepients', models.ManyToManyField(related_name='recepients', to=settings.AUTH_USER_MODEL)),
                ('shared_by', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='shared_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='post.Post'),
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=128, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TrendingTopicsInterest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topics', jsonfield.fields.JSONField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('interest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userprofile.Interest')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='is_deleted',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='post',
            name='video_height',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='video_thumbnail',
            field=models.ImageField(blank=True, null=True, upload_to='post_video_thumbnails'),
        ),
        migrations.AddField(
            model_name='post',
            name='video_width',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='comment',
            name='commented_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='post',
            name='interest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userprofile.Interest'),
        ),
        migrations.AlterField(
            model_name='post',
            name='poster',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='poster', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='topics',
            field=models.ManyToManyField(blank=True, to='post.Topic'),
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='parent',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='post.Post'),
        ),
        migrations.AddField(
            model_name='post',
            name='story_index',
            field=models.IntegerField(null=True),
        ),
        migrations.AddField(
            model_name='story',
            name='main_post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='post.Post'),
        ),
        migrations.AddField(
            model_name='post',
            name='story',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='post.Story'),
        ),
        migrations.AddField(
            model_name='post',
            name='resolution',
            field=django.contrib.postgres.fields.jsonb.JSONField(null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='mentioned_users',
            field=models.ManyToManyField(blank=True, related_name='mentioned_users', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='mentioned_users',
            field=models.ManyToManyField(blank=True, related_name='comment_mentioned_users', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='geo_location_lat',
            field=models.DecimalField(decimal_places=6, max_digits=9, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='geo_location_lng',
            field=models.DecimalField(decimal_places=6, max_digits=9, null=True),
        ),
        migrations.AlterField(
            model_name='post',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='post',
            name='brand',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_query_name='posts', to='brands.Brand'),
        ),
        migrations.AddField(
            model_name='post',
            name='audio',
            field=models.FileField(blank=True, null=True, upload_to='post_audio'),
        ),
        migrations.AddField(
            model_name='post',
            name='link',
            field=models.URLField(blank=True, max_length=1024, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='pdf',
            field=models.FileField(blank=True, null=True, upload_to='post_pdf'),
        ),
        migrations.AddField(
            model_name='post',
            name='link_meta_data',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='audio_thumbnail',
            field=models.ImageField(blank=True, null=True, upload_to='post_audio_thumbnails'),
        ),
        migrations.AddField(
            model_name='post',
            name='pdf_thumbnail',
            field=models.ImageField(blank=True, null=True, upload_to='post_pdf_thumbnails'),
        ),
        migrations.AddField(
            model_name='post',
            name='post_type',
            field=models.CharField(choices=[('image', 'Image'), ('video', 'Video'), ('pdf', 'PDF'), ('audio', 'Audio'), ('text', 'Text'), ('link', 'Link')], default=None, max_length=5, null=True),
        ),
        migrations.AlterField(
            model_name='post',
            name='brand',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='brands.Brand'),
        ),
        migrations.AddField(
            model_name='post',
            name='panaroma_type',
            field=models.CharField(blank=True, choices=[('', 'None'), ('equirectangular', 'Equirectangular')], default=None, max_length=15, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='is_work',
            field=models.BooleanField(default=True),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='UserTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=128)),
                ('interest', models.CharField(max_length=128)),
                ('popularity', models.IntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('top_posts', django.contrib.postgres.fields.jsonb.JSONField(default=[])),
                ('is_work', models.NullBooleanField()),
            ],
        ),
        migrations.AlterField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='post.Post'),
        ),
        migrations.CreateModel(
            name='ShareList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('share_with', jsonfield.fields.JSONField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='allow_sharing',
            field=models.BooleanField(default=True),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='post',
            name='share_list_user_ids',
            field=jsonfield.fields.JSONField(blank=True, default=[]),
        ),
        migrations.AddField(
            model_name='post',
            name='visible_to',
            field=models.CharField(choices=[('Public', 'Public'), ('Friends', 'Friends'), ('List', 'List')], default='Public', max_length=20),
        ),
        migrations.AddField(
            model_name='post',
            name='share_list',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='post.ShareList'),
        ),
        migrations.AddField(
            model_name='post',
            name='college',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='college.College'),
        ),
        migrations.AlterField(
            model_name='post',
            name='interest',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='userprofile.Interest'),
        ),
        migrations.AddField(
            model_name='post',
            name='thumbnail',
            field=models.ImageField(blank=True, null=True, upload_to='post_thumbnails'),
        ),
        migrations.AddField(
            model_name='post',
            name='topic',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='post',
            name='topic',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='usertopic',
            name='interest',
            field=models.CharField(blank=True, max_length=128, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='legacy_deleted',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='post',
            name='media_ids',
            field=django.contrib.postgres.fields.jsonb.JSONField(default=list),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='post',
            name='post_uuid',
            field=models.UUIDField(editable=False, null=True),
        ),
        migrations.AlterField(
            model_name='post',
            name='allow_sharing',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='post',
            name='post_uuid',
            field=models.UUIDField(editable=False, unique=True),
        ),
        migrations.AddField(
            model_name='post',
            name='processed',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='post',
            name='post_uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AlterField(
            model_name='post',
            name='media_ids',
            field=django.contrib.postgres.fields.jsonb.JSONField(null=True),
        ),
    ]
