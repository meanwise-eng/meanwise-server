# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-12-03 20:43
from __future__ import unicode_literals

from django.db import migrations


def create_critics_for_likes(apps, scheme_editor):
    Post = apps.get_model('post', 'Post')
    Critic = apps.get_model('credits', 'Critic')
    Credits = apps.get_model('credits', 'Credits')

    posts = Post.objects.all()
    for p in posts:
     likes = 0
     skills = list(p.topics.all().values_list('text', flat=True))
     to_user_id = p.poster.id
     for l in p.liked_by.all():
         from_user_id = l.id
         try:
             critic = Critic.objects.get(to_user_id=to_user_id, from_user_id=from_user_id, post_id=p.id)
         except Critic.DoesNotExist:
             critic = Critic(to_user_id=to_user_id, from_user_id=from_user_id, post_id=p.id, rating=3, skills=skills, user_credits=0, created_on=p.created_on)
         critic.rating=3
         critic.save()
         likes += 1
     for s in (skills + ['overall']):
         try:
             credit = Credits.objects.get(user_id=p.poster.id, skill=s)
         except Credits.DoesNotExist:
             credit = Credits.objects.create(user_id=p.poster.id, skill=s, credits=0)
         credit.credits += likes
         credit.save()


def empty_reverse(apps, scheme_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('credits', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_critics_for_likes, empty_reverse),
    ]
