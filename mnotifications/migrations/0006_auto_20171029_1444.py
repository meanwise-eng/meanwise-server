# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-10-29 14:44
from __future__ import unicode_literals

import logging

from django.db import migrations

from mnotifications.models import Notification
from userprofile.models import UserProfile


def convert_old_notifications(apps, scheme_editor):
    notifications = Notification.objects.filter(title=None)

    for notification in notifications:
        try:
            if notification.notification_type == Notification.TYPE_FRIEND_REQUEST_ACCEPTED:
                if notification.receiver == notification.user_friend.user:
                    friend = notification.user_friend.friend
                else:
                    friend = notification.user_friend.user

                try:
                    notification.title = friend.userprofile.fullname()
                except UserProfile.DoesNotExist:
                    notification.title = 'Unknown'
                notification.message = 'Accepted your friend request'
                notification.datetime = notification.created_on

            elif notification.notification_type == Notification.TYPE_FRIEND_REQUEST_RECEIVED:
                if notification.receiver == notification.user_friend.user:
                    friend = notification.user_friend.friend
                else:
                    friend = notification.user_friend.user

                try:
                    notification.title = friend.userprofile.fullname()
                except UserProfile.DoesNotExist:
                    notification.title = 'Unknown'
                notification.message = 'Sent you a friend request'
                notification.datetime = notification.created_on

            elif notification.notification_type == Notification.TYPE_LIKED_POST:
                notification.title = notification.post_liked_by.userprofile.fullname()
                notification.message = 'Liked your post'
                notification.datetime = notification.created_on
                notification.thumbnail = notification.post.post_thumbnail().url if notification.post.post_thumbnail() else None

            elif notification.notification_type == Notification.TYPE_COMMENTED_POST:
                notification.title = notification.comment.commented_by.userprofile.fullname()
                notification.message = 'Commented on your post'
                notification.datetime = notification.created_on
                notification.thumbnail = notification.post.post_thumbnail().url if notification.post.post_thumbnail() else None


            elif notification.notification_type == Notification.TYPE_POST_MENTIONED_USER:
                notification.title = notification.post.poster.userprofile.fullname()
                notification.message = 'Mentioned you in a comment'
                notification.datetime = notification.created_on
                notification.thumbnail = notification.post.post_thumbnail().url if notification.post.post_thumbnail() else None


            elif notification.notification_type == Notification.TYPE_COMMENT_MENTIONED_USER:
                notification.title = notification.comment.commented_by.userprofile.fullname()
                notification.message = 'Mentioned you in a comment'
                notification.datetime = notification.created_on
                notification.thumbnail = notification.post.post_thumbnail().url if notification.post.post_thumbnail() else None

            notification.save()
        except Exception as ex:
            logger = logging.getLogger('meanwise_backend.%s' % __name__)
            logger.exception('Error occured during migration: %s' % notification.id)
            #raise ex


def reverse_convert(apps, scheme_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('mnotifications', '0005_auto_20171020_0904'),
    ]

    operations = [
        migrations.RunPython(convert_old_notifications, reverse_convert),
    ]
